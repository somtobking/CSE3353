<diagram program="umletino" version="14.3.0"><zoom_level>10</zoom_level><element><id>UMLClass</id><coordinates><x>440</x><y>86</y><w>210</w><h>90</h></coordinates><panel_attributes>&lt;&lt;interface&gt;&gt;
Algorithm
--
-execute(): virtual void
_-printAlgo(): virtual void
-path: vector&lt;int&gt;</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>0</x><y>6</y><w>210</w><h>60</h></coordinates><panel_attributes>Algorithm Factory
AlgorithmFact
--
-typeOfAlgo(int choice): Algorithm* </panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>890</x><y>616</y><w>110</w><h>90</h></coordinates><panel_attributes>&lt;&lt;enumeration&gt;&gt;
SelectGa
--
Scaling
Elitist
Roulette

</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>20</x><y>236</y><w>300</w><h>190</h></coordinates><panel_attributes>TspTabu
--
-tabu_list: vector&lt;Solution&gt; 
-getShortestPath(): Solution 
-getNearestNode(Solution bestSoln, Map &amp;m): Solution
-exists(Solution s): bool
-setTabuListSize(int num): void
-listSize = 10: int
-numOfPerm = 1000: int
--
+path: vector&lt;int&gt; 
+execute(Map &amp;m) override: void
+printAlgo() override: void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>840</x><y>356</y><w>230</w><h>370</h></coordinates><panel_attributes>TspGa
--
-pop_size: int z
- popStart(Map &amp;m): void
-population:  vector&lt;Solution&gt; 
-mutation_rate: double
-numOfPerm: int
-maxGen: int
-parentNum[ ]: int 
-meanPath: float
-minCost(): Solution
--
+selectParents(selectGa type): void 
+mutate(Solution mut, Map &amp;m): Solution
+crossover(int p1, int p2, Map &amp;m): void
+avgPath(): double
+execute(Map &amp;m) override: double
+printAlgo() override: void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>570</x><y>241</y><w>310</w><h>90</h></coordinates><panel_attributes>TspNaive
--
+readDataFromFile(): void
+travllingSalesmanProblem(double graph[][V], int s): void
+execute(Map &amp;m) override: void
+printAlgo() override: void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>340</x><y>241</y><w>210</w><h>110</h></coordinates><panel_attributes>TspDp
--
+least(int c): int
+mincost(int city): void
+takeInput(): void
+execute(Map &amp;m) override: void
+printAlgo() override: void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>500</x><y>631</y><w>130</w><h>80</h></coordinates><panel_attributes>&lt;&lt;struct&gt;&gt;
Node
--
#id: int
#coordinates[ ]: float
  

</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>460</x><y>511</y><w>210</w><h>210</h></coordinates><panel_attributes>Map
--
+getVertex(): int
+readDataFile(string filename): void
+getDis(int d1, int d2): double
--
#numOfVertex =0: int
#nodes: vector&lt;Node&gt;</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>40</x><y>491</y><w>250</w><h>230</h></coordinates><panel_attributes>Solution
--
-path: vector&lt;int&gt; 
-cost: float
--
public:
+(Map &amp;m): Solution 
+inSoln(Map &amp;m): void
+computeCost(Map &amp;m): void
+getVertex(): int
+getCost(): int
+getPath(): vector&lt;int&gt; 
+setPath(vector&lt;int&gt; &amp;newPath): void
swapSoln(int i, int j, Map &amp;m): void
+isEmpty(): bool
+operator ==(const Solution&amp; rhs) const: bool</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1080</x><y>171</y><w>210</w><h>50</h></coordinates><panel_attributes>AbstractFactory
--
+main(): int</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>640</x><y>100</y><w>400</w><h>280</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;10;380;10;380;260</additional_attributes></element><element><id>Relation</id><coordinates><x>360</x><y>160</y><w>100</w><h>100</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>80;10;10;10;10;80</additional_attributes></element><element><id>Relation</id><coordinates><x>640</x><y>150</y><w>160</w><h>110</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;10;140;10;140;90</additional_attributes></element><element><id>Relation</id><coordinates><x>100</x><y>120</y><w>360</w><h>130</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>340;10;10;10;10;110</additional_attributes></element><element><id>Relation</id><coordinates><x>130</x><y>60</y><w>30</w><h>190</h></coordinates><panel_attributes>lt=&lt;..</panel_attributes><additional_attributes>10;10;10;170</additional_attributes></element><element><id>Relation</id><coordinates><x>200</x><y>10</y><w>350</w><h>100</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>330;80;330;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>200</x><y>0</y><w>640</w><h>260</h></coordinates><panel_attributes>lt=&lt;..</panel_attributes><additional_attributes>10;10;620;10;620;240</additional_attributes></element><element><id>Relation</id><coordinates><x>0</x><y>60</y><w>930</w><h>780</h></coordinates><panel_attributes>lt=&lt;..</panel_attributes><additional_attributes>10;10;10;760;910;760;910;670</additional_attributes></element><element><id>Relation</id><coordinates><x>200</x><y>30</y><w>220</w><h>230</h></coordinates><panel_attributes>lt=&lt;..</panel_attributes><additional_attributes>10;10;200;10;200;210</additional_attributes></element><element><id>Relation</id><coordinates><x>280</x><y>579</y><w>200</w><h>30</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>180;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>310</x><y>379</y><w>220</w><h>150</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>200;130;200;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>610</x><y>389</y><w>250</w><h>140</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;120;10;10;230;10</additional_attributes></element><element><id>Relation</id><coordinates><x>210</x><y>19</y><w>1050</w><h>170</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>1030;150;1030;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>610</x><y>29</y><w>550</w><h>160</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>530;140;530;10;10;10;10;60</additional_attributes></element></diagram>